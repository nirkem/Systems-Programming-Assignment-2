BONUS CHALLENGE FORM
--------------------

For each bonus challenge you have implemented, please replace the sentence "We are not entitled to this bonus."
with a short description of:

1. How it was implemented in your code
2. Where it was used (in which class methods).
3. How you tested that it is working correctly.

--------------------

1. Fully supporting all configuration fields and avoiding the use of magic numbers

1. How it was implemented in your code: we mainly used fields and methods from the Config class.
2. Where it was used (in which class methods): it is widley used all throughout the assignment, in Dealer, Player and Table.
3. How you tested that it is working correctly: there was no specific method to test, so with general tests we made sure that the program works

--------------------

2. Terminating all threads (that you created) gracefully and in reverse order to the order they were created in.

1. How it was implemented in your code: at the end of the Dealer's run and prior to announcing the winners, the Dealer calls terminate()
2. Where it was used (in which class methods): Dealer.terminate() and Player.terminate()
3. How you tested that it is working correctly: we used printing to verify that each of the threads is terminated

--------------------

3. Handling the config.turnTimeoutMillis value as follows:
config.turnTimeoutMillis < 0: display nothing.
config.turnTimeoutMillis = 0: display a timer since the last action (reshuffle or set collected).
Note: in modes without a countdown timer the dealer must ensure there is always at least one legal set on the table.

We are not entitled to this bonus.

--------------------

4. Making sure that the threads do not wake up unless some actual job needs to be done (e.g., a value needs to be
changed on the display, key input needs to be handled, etc.) and the only threads created by you are:
1 thread per player + 1 additional thread for non-human players.

We are not entitled to this bonus.
